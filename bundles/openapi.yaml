openapi: 3.0.3
info:
    title: BundleService API
    version: 1.0.0
paths:
    /bundles.v1.BundleService/CreateSuite:
        post:
            operationId: BundleService_CreateSuite_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateSuiteRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSuiteResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/DeleteSuite:
        post:
            operationId: BundleService_DeleteSuite_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteSuiteRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSuiteResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/GetBundle:
        post:
            operationId: BundleService_GetBundle_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetBundleRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBundleResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/GetBundleCategories:
        post:
            operationId: BundleService_GetBundleCategories_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetBundleCategoriesRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBundleCategoriesResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/GetModule:
        post:
            operationId: BundleService_GetModule_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetModuleRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetModuleResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/GetModuleTemplate:
        post:
            operationId: BundleService_GetModuleTemplate_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetModuleTemplateRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetModuleTemplateResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/GetModulesInSuite:
        post:
            operationId: BundleService_GetModulesInSuite_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetModulesInSuiteRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetModulesInSuiteResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/GetSuite:
        post:
            operationId: BundleService_GetSuite_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetSuiteRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSuiteResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/ListBundles:
        post:
            operationId: BundleService_ListBundles_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListBundlesRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListBundlesResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/ListModuleTemplates:
        post:
            operationId: BundleService_ListModuleTemplates_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListModuleTemplatesRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListModuleTemplatesResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/ListSuites:
        post:
            operationId: BundleService_ListSuites_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListSuitesRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSuitesResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
    /bundles.v1.BundleService/UpdateSuite:
        post:
            operationId: BundleService_UpdateSuite_Connect
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Suite'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSuiteResponse'
                    description: OK
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
                    description: Default error response
            tags:
                - Grpc Connect API
components:
    schemas:
        Action:
            properties:
                conditions:
                    items:
                        $ref: '#/components/schemas/Condition'
                    type: array
                disabled:
                    type: boolean
                name:
                    type: string
                notifyAction:
                    $ref: '#/components/schemas/NotifyAction'
            type: object
        Actor:
            properties:
                email:
                    type: string
                name:
                    type: string
            type: object
        AgentData:
            properties:
                email:
                    type: string
                faxNumber:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                mobilePhoneNumber:
                    type: string
                office:
                    $ref: '#/components/schemas/Office'
                officePhoneNumber:
                    type: string
                photo:
                    type: string
            type: object
        AssetRef:
            description: AssetRef is an instantiation of a TemplateRef in a Suite.
            properties:
                assetId:
                    description: Asset ID unique identifier for the asset
                    type: string
                config:
                    description: Config is dependent on the asset type, and its contents are merged with the template ref's default_config to customize the template.
                    type: object
                conversionComponent:
                    description: Conversion Component corresponds is the default value for Flow and Event messages that define the key in the data field of the ExecuteResponse message. This identifies the component that triggered the conversion event.
                    type: string
                conversionType:
                    description: Conversion Type is an enumeration used to describe the intended purpose of this specific template and eventual asset.
                    format: enum
                    type: integer
                disabled:
                    description: Disabled is a boolean to determine whether this asset should be disabled in the UI when rendering the conversion flow.
                    type: boolean
                displayName:
                    description: A display name for the template used in editors
                    type: string
                iconUrl:
                    description: Icon URL can be set to be displayed with the short name when rendering this template in the conversion flow, i.e. the button icon to display the asset.
                    type: string
                isCustomizable:
                    description: Is Customizable is a boolean as to whether or not one is allowed to override the default config.
                    type: boolean
                renderMode:
                    description: The rendering mode to use when rendering this asset in a suite
                    format: enum
                    type: integer
                shortName:
                    description: The default text rendered as the name for this template in the conversion flow, i.e. the button text to display the asset.
                    type: string
                templateId:
                    description: Template ID is the id of the template used to create the Asset
                    type: string
                templateVersion:
                    description: The version of the template to use
                    type: string
                type:
                    description: Type is the type of Asset, usually defined from the associated template reference.
                    format: enum
                    type: integer
            type: object
        Bundle:
            description: Bundle is a structure to represent a set of asset templates and links between those templates. Bundles are instantiated as a suite during the creation process.
            properties:
                archiveReason:
                    type: string
                archivedAt:
                    format: date-time
                    type: string
                bundleType:
                    description: Bundle Type is the type of bundle that is being created.
                    format: enum
                    type: integer
                category:
                    description: Category is an arbitrary string that can be used to categorize the bundle for template listings.
                    type: string
                createdAt:
                    format: date-time
                    type: string
                creator:
                    allOf:
                        - $ref: '#/components/schemas/Creator'
                    description: Creator is the person who created the bundle.
                dagVersion:
                    type: string
                description:
                    description: Description is an optional description of the bundle.
                    type: string
                folderPath:
                    type: string
                groupId:
                    type: string
                id:
                    description: ID is the UUID of the Bundle
                    type: string
                links:
                    description: Links represent how templates are connected in the bundle.
                    items:
                        $ref: '#/components/schemas/Link'
                    type: array
                name:
                    description: Name is the name of the bundle.
                    type: string
                orgId:
                    description: Org ID is the organization that the bundle belongs to.
                    type: string
                state:
                    type: string
                tags:
                    description: Tags are a set of strings that can be used to categorize the bundle in various ways.
                    items:
                        type: string
                    type: array
                templates:
                    additionalProperties:
                        $ref: '#/components/schemas/TemplateRef'
                    description: Templates is a map of template references that are used to create assets in a suite.
                    type: object
                updatedAt:
                    format: date-time
                    type: string
                version:
                    type: string
                visibility:
                    type: string
                workspaceId:
                    description: Workspace ID is the workspace that the bundle belongs to. Must be associated with the org_id.
                    type: string
            type: object
        Category:
            properties:
                category:
                    type: string
                count:
                    type: string
            type: object
        CommerceData:
            properties:
                integration:
                    $ref: '#/components/schemas/Integration'
                product:
                    $ref: '#/components/schemas/Product'
            type: object
        CompoundRuleValue:
            properties:
                lhs:
                    $ref: '#/components/schemas/Condition'
                operator:
                    format: enum
                    type: integer
                rhs:
                    $ref: '#/components/schemas/Condition'
            type: object
        Condition:
            properties:
                label:
                    type: string
                ruleType:
                    format: enum
                    type: integer
                values:
                    items:
                        $ref: '#/components/schemas/RuleValue'
                    type: array
            type: object
        ContactData:
            properties:
                address:
                    $ref: '#/components/schemas/PostalAddress'
                bio:
                    type: string
                company:
                    type: string
                department:
                    type: string
                email:
                    type: string
                fullName:
                    type: string
                mobileNumber:
                    type: string
                photo:
                    $ref: '#/components/schemas/Image'
                socialLinks:
                    items:
                        $ref: '#/components/schemas/SocialLink'
                    type: array
                title:
                    type: string
                website:
                    type: string
                workNumber:
                    type: string
            type: object
        CreateSuiteRequest:
            properties:
                brandKitId:
                    type: string
                bundleId:
                    type: string
                bundleVersion:
                    type: string
                config:
                    additionalProperties:
                        type: object
                    type: object
                data:
                    $ref: '#/components/schemas/Data'
                description:
                    type: string
                domain:
                    type: string
                folderPath:
                    type: string
                name:
                    type: string
                orgId:
                    type: string
                state:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                timezone:
                    type: string
                workspaceId:
                    type: string
            type: object
        CreateSuiteResponse:
            properties:
                suite:
                    $ref: '#/components/schemas/Suite'
            type: object
        Creator:
            properties:
                email:
                    type: string
                orgId:
                    type: string
                timezone:
                    type: string
                userId:
                    type: string
            type: object
        Data:
            description: Data is a message that represents the data that is associated with a suite.
            properties:
                commerce:
                    $ref: '#/components/schemas/CommerceData'
                contact:
                    $ref: '#/components/schemas/ContactData'
                form:
                    $ref: '#/components/schemas/FormData'
                realEstate:
                    $ref: '#/components/schemas/RealEstateData'
            type: object
        DateRange:
            properties:
                endDate:
                    description: optional timestamp in RFC3339 format
                    type: string
                startDate:
                    description: Optional timestamp in RFC3339 format
                    type: string
            type: object
        DateValue:
            description: DateValue is a value that represents a date
            properties:
                after:
                    format: date
                    type: string
                before:
                    format: date
                    type: string
                between:
                    $ref: '#/components/schemas/DateRange'
                is:
                    format: date
                    type: string
            type: object
        DayOfWeekValue:
            description: DayOfWeekValue is a value that represents a day of the week
            properties:
                after:
                    format: int32
                    type: integer
                before:
                    format: int32
                    type: integer
                between:
                    $ref: '#/components/schemas/Int32Range'
                dayNumber:
                    description: 'Deprecated: Use is instead'
                    format: int32
                    type: integer
                is:
                    format: int32
                    type: integer
            type: object
        DeleteSuiteRequest:
            properties:
                id:
                    type: string
            type: object
        DeleteSuiteResponse:
            type: object
        DeviceTypeValue:
            properties:
                deviceType:
                    format: enum
                    type: integer
            type: object
        Flow:
            properties:
                conversionComponent:
                    type: string
                conversionType:
                    format: enum
                    type: integer
                disabled:
                    type: boolean
                rules:
                    type: string
            type: object
        FormData:
            properties:
                description:
                    type: string
                images:
                    items:
                        $ref: '#/components/schemas/Image'
                    type: array
                name:
                    type: string
                photos:
                    items:
                        type: string
                    type: array
            type: object
        GeoValue:
            properties:
                county:
                    type: string
                region:
                    type: string
                state:
                    type: string
                zip:
                    type: string
            type: object
        GetBundleCategoriesRequest:
            properties:
                org_id:
                    type: string
                workspace_id:
                    type: string
            type: object
        GetBundleCategoriesResponse:
            properties:
                categories:
                    items:
                        $ref: '#/components/schemas/Category'
                    type: array
            type: object
        GetBundleRequest:
            properties:
                id:
                    type: string
                version:
                    type: string
            type: object
        GetBundleResponse:
            properties:
                bundle:
                    $ref: '#/components/schemas/Bundle'
            type: object
        GetModuleRequest:
            properties:
                id:
                    type: string
                version:
                    type: string
            type: object
        GetModuleResponse:
            properties:
                module:
                    $ref: '#/components/schemas/Module'
            type: object
        GetModuleTemplateRequest:
            properties:
                id:
                    type: string
                version:
                    type: string
            type: object
        GetModuleTemplateResponse:
            properties:
                template:
                    $ref: '#/components/schemas/ModuleTemplate'
            type: object
        GetModulesInSuiteRequest:
            properties:
                suite_id:
                    type: string
                version:
                    type: string
            type: object
        GetModulesInSuiteResponse:
            properties:
                modules:
                    additionalProperties:
                        $ref: '#/components/schemas/Module'
                    type: object
            type: object
        GetSuiteRequest:
            properties:
                id:
                    type: string
            type: object
        GetSuiteResponse:
            properties:
                suite:
                    $ref: '#/components/schemas/Suite'
            type: object
        GoogleProtobufAny:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
            properties:
                '@type':
                    description: The type of the serialized message.
                    type: string
            type: object
        GoogleProtobufValue:
            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.
        HourOfDayValue:
            description: HourOfDayValue is a value that represents an hour of the day
            properties:
                after:
                    $ref: '#/components/schemas/TimeBound'
                before:
                    $ref: '#/components/schemas/TimeBound'
                between:
                    $ref: '#/components/schemas/TimeBoundRange'
                is:
                    $ref: '#/components/schemas/TimeBound'
                lowerBound:
                    allOf:
                        - $ref: '#/components/schemas/TimeBound'
                    description: 'Deprecated: Use between instead'
                upperBound:
                    $ref: '#/components/schemas/TimeBound'
            type: object
        Image:
            properties:
                altText:
                    type: string
                height:
                    format: int32
                    type: integer
                url:
                    type: string
                width:
                    format: int32
                    type: integer
            type: object
        Int32Range:
            description: Int32Range is a range of integers
            properties:
                end:
                    format: int32
                    type: integer
                start:
                    format: int32
                    type: integer
            type: object
        Integration:
            properties:
                createdAt:
                    format: date-time
                    type: string
                description:
                    type: string
                id:
                    type: string
                integrationType:
                    type: string
                logo:
                    $ref: '#/components/schemas/Image'
                name:
                    type: string
                orgId:
                    type: string
                paymentSettings:
                    $ref: '#/components/schemas/PaymentSettings'
                updatedAt:
                    format: date-time
                    type: string
                url:
                    type: string
            type: object
        Link:
            description: Link is a key structure that defines how templates are connected in bundles. It is the primary mechanism for defining navigation between templates and their corresponding assets.
            properties:
                actions:
                    description: Actions define a set of events which can be triggered when a link is followed. This occurs after conditions are processed.
                    items:
                        $ref: '#/components/schemas/Action'
                    type: array
                conditions:
                    description: Conditions define the rules of when the source and destination link is allowed to be followed, i.e. a smart rule for location or device.
                    items:
                        $ref: '#/components/schemas/Condition'
                    type: array
                destination:
                    description: Destination is the key in the parent element's map (i.e. a Bundle's Templates field) specifying which element defines the end of the link.
                    type: string
                destinationAnchor:
                    description: Destination Anchor is an arbitrary string defining where to draw the destination link in a flow editor
                    type: string
                source:
                    description: Source is the key in the parent element's map (i.e. a Bundle's Templates field) specifying which element defines the start of the link.
                    type: string
                sourceAnchor:
                    description: Source Anchor is an arbitrary string defining where to draw the source link in a flow editor
                    type: string
            type: object
        ListBundlesRequest:
            properties:
                categories:
                    description: |4
                         Show only bundles that are in a category from this list of categories.
                    type: string
                creator_id:
                    description: |4
                         Deprecated. Use creator_ids instead.
                    type: string
                creator_ids:
                    description: |4
                         Show only bundles that are created by a creator id  of creator ids of the bundles.
                    type: string
                folder_path:
                    description: |4
                         Show only bundles belonging to this folder path.
                    type: string
                name_prefix:
                    description: |4
                         Show only bundles that include this prefix in the name.
                    type: string
                org_id:
                    description: |4
                         Org ID is the organization that the bundles belong to.
                    type: string
                states:
                    description: |4
                         Show only bundles that are in a state from this list of of states.
                    type: string
                tags:
                    description: |4
                         Show only bundles that include a tag from this list of tags.
                    type: string
                visibilities:
                    description: |4
                         Show only bundles that are of a visibility from the list of visibilities.
                    type: string
                workspace_id:
                    description: |4
                         Workspace ID is the workspace that the bundles belong to. Must be associated with the org_id.
                    type: string
            type: object
        ListBundlesResponse:
            properties:
                bundles:
                    description: List of bundles that match the query.
                    items:
                        $ref: '#/components/schemas/Bundle'
                    type: array
                pageInfo:
                    allOf:
                        - $ref: '#/components/schemas/PaginationPageInfo'
                    description: Pagination information.
            type: object
        ListModuleTemplatesRequest:
            properties:
                categories:
                    type: string
                creator_ids:
                    type: string
                folder_path:
                    type: string
                name_prefix:
                    type: string
                org_id:
                    type: string
                states:
                    type: string
                tags:
                    type: string
                visibilities:
                    type: string
                workspace_id:
                    type: string
            type: object
        ListModuleTemplatesResponse:
            properties:
                pageInfo:
                    $ref: '#/components/schemas/PaginationPageInfo'
                templates:
                    items:
                        $ref: '#/components/schemas/ModuleTemplate'
                    type: array
            type: object
        ListSuitesRequest:
            properties:
                categories:
                    type: string
                creator_id:
                    type: string
                creator_ids:
                    type: string
                external_id:
                    type: string
                folder_path:
                    type: string
                name_prefix:
                    type: string
                org_id:
                    type: string
                states:
                    type: string
                tags:
                    type: string
                workspace_id:
                    type: string
            type: object
        ListSuitesResponse:
            properties:
                pageInfo:
                    $ref: '#/components/schemas/PaginationPageInfo'
                suites:
                    items:
                        $ref: '#/components/schemas/Suite'
                    type: array
            type: object
        ListingData:
            description: ListingData is a message that represents a real estate listing.
            properties:
                active:
                    description: Active is a boolean to determine if the listing is currently active.
                    type: boolean
                additionalDetails:
                    type: string
                address:
                    allOf:
                        - $ref: '#/components/schemas/PostalAddress'
                    description: Address is the postal address of the listing.
                bathrooms:
                    description: '@deprecated in favor of float total_bathrooms'
                    format: int32
                    type: integer
                bedrooms:
                    format: int32
                    type: integer
                description:
                    type: string
                fullBathrooms:
                    format: int32
                    type: integer
                halfBathrooms:
                    format: int32
                    type: integer
                listingDate:
                    format: date-time
                    type: string
                livingArea:
                    format: int32
                    type: integer
                lotSize:
                    format: int32
                    type: integer
                mlsId:
                    description: The MLS ID of the listing
                    type: string
                photos:
                    items:
                        type: string
                    type: array
                price:
                    $ref: '#/components/schemas/Money'
                propertyType:
                    type: string
                totalBathrooms:
                    format: float
                    type: number
                url:
                    description: URL of the original listing
                    type: string
            type: object
        Location:
            description: Location represents a lat/long pair as a Decimal Degree (DD)
            properties:
                lat:
                    format: double
                    type: number
                lng:
                    format: double
                    type: number
            type: object
        Module:
            properties:
                archiveReason:
                    description: The reason the module was archived
                    type: string
                archivedAt:
                    description: The timestamp at which this module was archived
                    format: date-time
                    type: string
                assets:
                    additionalProperties:
                        $ref: '#/components/schemas/AssetRef'
                    description: The assets associated with this module
                    type: object
                brandKitId:
                    description: The id of the bundle this module is associated with
                    type: string
                createdAt:
                    description: The timestamp at which this mocdule was created
                    format: date-time
                    type: string
                creator:
                    allOf:
                        - $ref: '#/components/schemas/Creator'
                    description: The creator of the module
                dagVersion:
                    description: The version of the underlying DAG
                    type: string
                description:
                    description: An optional description of the module
                    type: string
                domain:
                    description: The domain to use with this module
                    type: string
                entryPoint:
                    description: The entry point for this module
                    type: string
                folderPath:
                    description: The folder path of the module
                    type: string
                id:
                    description: The id of this module instance
                    type: string
                links:
                    description: The set of links between assets in this module
                    items:
                        $ref: '#/components/schemas/Link'
                    type: array
                name:
                    description: The name of the module
                    type: string
                orgId:
                    description: The organization this module is associated with
                    type: string
                state:
                    description: The state of the module
                    type: string
                tags:
                    description: Tags associated with the module
                    items:
                        type: string
                    type: array
                templateId:
                    description: The id of the module template this module was created from
                    type: string
                templateVersion:
                    description: The version of the module template this module was created from
                    type: string
                updatedAt:
                    description: The timestamp at which this module was last updated
                    format: date-time
                    type: string
                version:
                    description: The specific version of the module
                    type: string
                workspaceId:
                    description: The workspace this module is associated with
                    type: string
            type: object
        ModuleTemplate:
            properties:
                archiveReason:
                    description: The reason the module template was archived
                    type: string
                archivedAt:
                    description: The timestamp at which this module template was archived
                    format: date-time
                    type: string
                category:
                    description: The category of the module template
                    type: string
                configSchema:
                    description: The schema for the config of this module template
                    type: string
                createdAt:
                    description: The timestamp at which this module template was created
                    format: date-time
                    type: string
                creator:
                    allOf:
                        - $ref: '#/components/schemas/Creator'
                    description: The creator of the module template
                dagVersion:
                    description: The version of the underlying DAG
                    type: string
                description:
                    description: The description of the module template
                    type: string
                entryPoint:
                    description: The entry point for this module template
                    type: string
                folderPath:
                    description: The folder path of the module template
                    type: string
                id:
                    description: The id of this module template
                    type: string
                links:
                    description: The links between templates in this module template
                    items:
                        $ref: '#/components/schemas/Link'
                    type: array
                name:
                    description: The name of the module template
                    type: string
                orgId:
                    description: The organization this module template is associated with
                    type: string
                state:
                    description: The state of the module template
                    type: string
                supportedBundleTypes:
                    description: The list of bundle types that this module template supports
                    items:
                        format: enum
                        type: integer
                    type: array
                tags:
                    description: Tags associated with the module template
                    items:
                        type: string
                    type: array
                templates:
                    additionalProperties:
                        $ref: '#/components/schemas/TemplateRef'
                    description: The templates associated with this module template
                    type: object
                updatedAt:
                    description: The timestamp at which this module template was last updated
                    format: date-time
                    type: string
                version:
                    description: The specific version of the module template
                    type: string
                visibility:
                    description: The visibility of this module template
                    type: string
                workspaceId:
                    description: The workspace this module template is associated with
                    type: string
            type: object
        Money:
            description: Represents an amount of money with its currency type.
            properties:
                currencyCode:
                    description: The three-letter currency code defined in ISO 4217.
                    type: string
                nanos:
                    description: |-
                        Number of nano (10^-9) units of the amount.
                         The value must be between -999,999,999 and +999,999,999 inclusive.
                         If `units` is positive, `nanos` must be positive or zero.
                         If `units` is zero, `nanos` can be positive, zero, or negative.
                         If `units` is negative, `nanos` must be negative or zero.
                         For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
                    format: int32
                    type: integer
                units:
                    description: |-
                        The whole units of the amount.
                         For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
                    type: string
            type: object
        NearbyValue:
            properties:
                distance:
                    format: double
                    type: number
                fullAddress:
                    type: string
                location:
                    $ref: '#/components/schemas/Location'
                unit:
                    format: enum
                    type: integer
            type: object
        NotValue:
            properties:
                condition:
                    $ref: '#/components/schemas/Condition'
            type: object
        NotifyAction:
            properties:
                ccs:
                    items:
                        $ref: '#/components/schemas/Actor'
                    type: array
                defaultTemplateId:
                    type: string
                delay:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                notificationType:
                    format: enum
                    type: integer
                recipients:
                    items:
                        $ref: '#/components/schemas/Actor'
                    type: array
                sender:
                    $ref: '#/components/schemas/Sender'
                subject:
                    type: string
                suppressionGroupId:
                    type: string
                templateId:
                    type: string
            type: object
        Office:
            properties:
                address:
                    $ref: '#/components/schemas/PostalAddress'
                brokerage:
                    type: string
            type: object
        PaginationPageInfo:
            description: Response object used to inform the next pagination arguments
            properties:
                endCursor:
                    description: Opaque cursor corresponding to the last record in the response array
                    type: string
                hasNextPage:
                    description: Indicates whether more data exists following the set defined by the clients arguments
                    type: boolean
                hasPreviousPage:
                    description: Indicates whether more data exists prior to the set defined by the clients argument
                    type: boolean
                startCursor:
                    description: Opaque cursor corresponding to the first record in the response array
                    type: string
            type: object
        PaymentSettings:
            properties:
                acceptedCardBrands:
                    items:
                        type: string
                    type: array
                cardVaultUrl:
                    type: string
                countryCode:
                    type: string
                currencyCode:
                    type: string
                enabledPresentmentCurrencies:
                    items:
                        type: string
                    type: array
                paymentAccountId:
                    type: string
                supportedDigitalWallets:
                    items:
                        type: string
                    type: array
            type: object
        Point:
            description: Point is used to define where an object is placed visually in a user expience, i.e. the Builder experience.
            properties:
                x:
                    format: float
                    type: number
                "y":
                    format: float
                    type: number
            type: object
        PostalAddress:
            description: |-
                Represents a postal address, e.g. for postal delivery or payments addresses.
                 Given a postal address, a postal service can deliver items to a premise, P.O.
                 Box or similar.
                 It is not intended to model geographical locations (roads, towns,
                 mountains).

                 In typical usage an address would be created via user input or from importing
                 existing data, depending on the type of process.

                 Advice on address input / editing:
                  - Use an i18n-ready address widget such as
                    https://github.com/google/libaddressinput)
                 - Users should not be presented with UI elements for input or editing of
                   fields outside countries where that field is used.

                 For more guidance on how to use this schema, please see:
                 https://support.google.com/business/answer/6397478
            properties:
                addressLines:
                    description: |-
                        Unstructured address lines describing the lower levels of an address.

                         Because values in address_lines do not have type information and may
                         sometimes contain multiple values in a single field (e.g.
                         "Austin, TX"), it is important that the line order is clear. The order of
                         address lines should be "envelope order" for the country/region of the
                         address. In places where this can vary (e.g. Japan), address_language is
                         used to make it explicit (e.g. "ja" for large-to-small ordering and
                         "ja-Latn" or "en" for small-to-large). This way, the most specific line of
                         an address can be selected based on the language.

                         The minimum permitted structural representation of an address consists
                         of a region_code with all remaining information placed in the
                         address_lines. It would be possible to format such an address very
                         approximately without geocoding, but no semantic reasoning could be
                         made about any of the address components until it was at least
                         partially resolved.

                         Creating an address only containing a region_code and address_lines, and
                         then geocoding is the recommended way to handle completely unstructured
                         addresses (as opposed to guessing which parts of the address should be
                         localities or administrative areas).
                    items:
                        type: string
                    type: array
                administrativeArea:
                    description: |-
                        Optional. Highest administrative subdivision which is used for postal
                         addresses of a country or region.
                         For example, this can be a state, a province, an oblast, or a prefecture.
                         Specifically, for Spain this is the province and not the autonomous
                         community (e.g. "Barcelona" and not "Catalonia").
                         Many countries don't use an administrative area in postal addresses. E.g.
                         in Switzerland this should be left unpopulated.
                    type: string
                languageCode:
                    description: |-
                        Optional. BCP-47 language code of the contents of this address (if
                         known). This is often the UI language of the input form or is expected
                         to match one of the languages used in the address' country/region, or their
                         transliterated equivalents.
                         This can affect formatting in certain countries, but is not critical
                         to the correctness of the data and will never affect any validation or
                         other non-formatting related operations.

                         If this value is not known, it should be omitted (rather than specifying a
                         possibly incorrect default).

                         Examples: "zh-Hant", "ja", "ja-Latn", "en".
                    type: string
                locality:
                    description: |-
                        Optional. Generally refers to the city/town portion of the address.
                         Examples: US city, IT comune, UK post town.
                         In regions of the world where localities are not well defined or do not fit
                         into this structure well, leave locality empty and use address_lines.
                    type: string
                organization:
                    description: Optional. The name of the organization at the address.
                    type: string
                postalCode:
                    description: |-
                        Optional. Postal code of the address. Not all countries use or require
                         postal codes to be present, but where they are used, they may trigger
                         additional validation with other parts of the address (e.g. state/zip
                         validation in the U.S.A.).
                    type: string
                recipients:
                    description: |-
                        Optional. The recipient at the address.
                         This field may, under certain circumstances, contain multiline information.
                         For example, it might contain "care of" information.
                    items:
                        type: string
                    type: array
                regionCode:
                    description: |-
                        Required. CLDR region code of the country/region of the address. This
                         is never inferred and it is up to the user to ensure the value is
                         correct. See http://cldr.unicode.org/ and
                         http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
                         for details. Example: "CH" for Switzerland.
                    type: string
                revision:
                    description: |-
                        The schema revision of the `PostalAddress`. This must be set to 0, which is
                         the latest revision.

                         All new revisions **must** be backward compatible with old revisions.
                    format: int32
                    type: integer
                sortingCode:
                    description: |-
                        Optional. Additional, country-specific, sorting code. This is not used
                         in most regions. Where it is used, the value is either a string like
                         "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number
                         alone, representing the "sector code" (Jamaica), "delivery area indicator"
                         (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
                    type: string
                sublocality:
                    description: |-
                        Optional. Sublocality of the address.
                         For example, this can be neighborhoods, boroughs, districts.
                    type: string
            type: object
        PriceRange:
            properties:
                maxVariantPrice:
                    $ref: '#/components/schemas/Money'
                minVariantPrice:
                    $ref: '#/components/schemas/Money'
            type: object
        Product:
            properties:
                availableForSale:
                    type: boolean
                compareAtPriceRange:
                    $ref: '#/components/schemas/PriceRange'
                createdAt:
                    format: date-time
                    type: string
                description:
                    type: string
                featuredImage:
                    $ref: '#/components/schemas/Image'
                handle:
                    type: string
                id:
                    type: string
                images:
                    items:
                        $ref: '#/components/schemas/Image'
                    type: array
                integrationId:
                    type: string
                onlineStoreUrl:
                    type: string
                priceRange:
                    $ref: '#/components/schemas/PriceRange'
                productType:
                    type: string
                rating:
                    $ref: '#/components/schemas/Rating'
                ratingCount:
                    type: string
                title:
                    type: string
                totalInventory:
                    type: string
                updatedAt:
                    format: date-time
                    type: string
                variants:
                    items:
                        $ref: '#/components/schemas/Variant'
                    type: array
                vendor:
                    type: string
            type: object
        Rating:
            properties:
                scaleMax:
                    format: float
                    type: number
                scaleMin:
                    format: float
                    type: number
                value:
                    format: float
                    type: number
            type: object
        RealEstateData:
            properties:
                agent:
                    $ref: '#/components/schemas/AgentData'
                listing:
                    $ref: '#/components/schemas/ListingData'
            type: object
        RequestContextValue:
            properties:
                key:
                    type: string
                operator:
                    format: enum
                    type: integer
                value:
                    $ref: '#/components/schemas/GoogleProtobufValue'
            type: object
        RequestValue:
            properties:
                key:
                    type: string
                operator:
                    format: enum
                    type: integer
                value:
                    $ref: '#/components/schemas/GoogleProtobufValue'
            type: object
        RuleValue:
            properties:
                compoundValue:
                    $ref: '#/components/schemas/CompoundRuleValue'
                contextValue:
                    $ref: '#/components/schemas/RequestContextValue'
                dateValue:
                    $ref: '#/components/schemas/DateValue'
                dayOfWeekValue:
                    $ref: '#/components/schemas/DayOfWeekValue'
                deviceTypeValue:
                    $ref: '#/components/schemas/DeviceTypeValue'
                geoValue:
                    $ref: '#/components/schemas/GeoValue'
                hourOfDayValue:
                    $ref: '#/components/schemas/HourOfDayValue'
                nearbyValue:
                    $ref: '#/components/schemas/NearbyValue'
                notValue:
                    $ref: '#/components/schemas/NotValue'
                requestValue:
                    $ref: '#/components/schemas/RequestValue'
            type: object
        Sender:
            properties:
                from:
                    $ref: '#/components/schemas/Actor'
                ipGroupId:
                    type: string
                replyTo:
                    $ref: '#/components/schemas/Actor'
            type: object
        SocialLink:
            properties:
                id:
                    type: string
                type:
                    format: enum
                    type: integer
            type: object
        Status:
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
            properties:
                code:
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                    type: integer
                details:
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    type: array
                message:
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                    type: string
            type: object
        Suite:
            description: Suite is an instantiation of a Bundle. It is the primary object that is created and managed by the user to create a conversion flow.
            properties:
                advancedGeoEnabled:
                    description: Advanced Geo Enabled is a boolean to determine if the suite will have advanced geo capabilities on by default.
                    type: boolean
                archiveReason:
                    description: Archive Reason is optional informational text as to why the suite was archived.
                    type: string
                archivedAt:
                    description: Archived At is the timestamp when the suite was archived. This is only relevant if the state field is set to archived.
                    format: date-time
                    type: string
                assets:
                    additionalProperties:
                        $ref: '#/components/schemas/AssetRef'
                    description: Assets is the set of key/value pairs of instantiated assets in the suite, created from the Bundle's TemplateRefs.
                    type: object
                brandKitId:
                    description: Brand Kit ID is the unique identifier for the brand kit that the suite is associated with.
                    type: string
                bundleId:
                    description: Bundle ID is the unique identifier for the bundle that the suite is based on.
                    type: string
                bundleType:
                    description: Bundle Type is the type of bundle that the suite is based on.
                    format: enum
                    type: integer
                bundleVersion:
                    description: Bundle Version is the version of the bundle that the suite was originally created from, as the bundle may have multiple versions.
                    type: string
                category:
                    type: string
                createdAt:
                    description: Created At is the timestamp when the suite was created.
                    format: date-time
                    type: string
                creator:
                    allOf:
                        - $ref: '#/components/schemas/Creator'
                    description: Creator is the person who created the suite.
                data:
                    allOf:
                        - $ref: '#/components/schemas/Data'
                    description: The set of data that is associated with the suite. This is dependent on the bundle type.
                description:
                    description: Description is an optional description of the suite.
                    type: string
                domain:
                    type: string
                flows:
                    additionalProperties:
                        $ref: '#/components/schemas/Flow'
                    description: Flows are how Assets in the Suite are connected to each other.
                    type: object
                folderId:
                    description: The ID of the folder where the suite is located.
                    type: string
                folderPath:
                    description: The path to the folder where the suite is located.
                    type: string
                id:
                    description: ID is the unique identifier for the suite.
                    type: string
                links:
                    description: Links represent how templates are connected in the bundle.
                    items:
                        $ref: '#/components/schemas/Link'
                    type: array
                name:
                    description: Name is the name of the suite.
                    type: string
                orgId:
                    description: Org ID is the organization that the suite belongs to.
                    type: string
                state:
                    description: State respresents the current state of the suite. Valid values are active, archived or draft.
                    type: string
                tags:
                    description: Tags are a set of strings that can be used to categorize the suite in various ways.
                    items:
                        type: string
                    type: array
                timezone:
                    description: |-
                        The specific timeezone to use when resolving time-based rules. If not set,
                         the timezone of the scanner will be used.
                    type: string
                updatedAt:
                    description: Updated At is the timestamp when the suite was last updated.
                    format: date-time
                    type: string
                workspaceId:
                    description: Workspace ID is the workspace that the suite belongs to. Must be associated with the org_id.
                    type: string
            type: object
        TemplateRef:
            description: TemplateRef defines a template to an asset which can be used to instantiate an asset in a suite.
            properties:
                conversionComponent:
                    description: Conversion Component corresponds is the default value for Flow and Event messages that define the key in the data field of the ExecuteResponse message. This identifies the component that triggered the conversion event.
                    type: string
                conversionType:
                    description: Conversion Type is an enumeration used to describe the intended purpose of this specific template and eventual asset.
                    format: enum
                    type: integer
                defaultConfig:
                    description: Default Config contains the default configuration for this asset type. It is dependent on the asset type, and is merged in an asset ref with any overrides.
                    type: object
                displayName:
                    description: A display name for the template used in editors
                    type: string
                iconUrl:
                    description: Icon URL can be set to be displayed with the short name when rendering this template in the conversion flow, i.e. the button icon to display the asset.
                    type: string
                initiallyDisabled:
                    description: Initially Disabled is a boolean to determine whether this template should appear disabled in the UI when creating the asset.
                    type: boolean
                position:
                    allOf:
                        - $ref: '#/components/schemas/Point'
                    description: Position is a set of x, y coordinates for where this template should be rendered relative to other templates in a flow editor.
                renderMode:
                    description: The rendering mode to use when rendering this asset in a suite
                    format: enum
                    type: integer
                shortName:
                    description: The default text rendered as the name for this template in the conversion flow, i.e. the button text to display the asset.
                    type: string
                templateId:
                    description: A unique ID to the template.
                    type: string
                templateVersion:
                    description: The version of the template to use
                    type: string
                type:
                    description: Asset Type will define the structure for the default config and how the TemplateRef should be interpreted.
                    format: enum
                    type: integer
            type: object
        TimeBound:
            description: TimeBound is a bounded point in time
            properties:
                hour:
                    format: int32
                    type: integer
                minute:
                    format: int32
                    type: integer
            type: object
        TimeBoundRange:
            description: TimeBoundRange is a bounded range of time
            properties:
                end:
                    $ref: '#/components/schemas/TimeBound'
                start:
                    $ref: '#/components/schemas/TimeBound'
            type: object
        UpdateSuiteResponse:
            properties:
                suite:
                    $ref: '#/components/schemas/Suite'
            type: object
        Variant:
            properties:
                availableForSale:
                    type: boolean
                barcode:
                    type: string
                compareAtPrice:
                    $ref: '#/components/schemas/Money'
                currentlyNotInStock:
                    type: boolean
                id:
                    type: string
                image:
                    $ref: '#/components/schemas/Image'
                price:
                    $ref: '#/components/schemas/Money'
                quantityAvailable:
                    type: string
                requiresShipping:
                    type: boolean
                selectedOptions:
                    additionalProperties:
                        type: string
                    type: object
                sku:
                    type: string
                title:
                    type: string
            type: object
